{"version":3,"sources":["ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","views/apps/Converter.js"],"names":["Avatar","color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","CardSecondaryAction","title","link","icon","Tooltip","placement","ButtonBase","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id","transform","Converter","customization","useSelector","state","navType","useState","csv","json","setState","secondary","useEffect","container","gridSpacing","item","xs","sm","direction","value","onChange","e","data","prev","modules","toolbar","mt","disableElevation","variant","onClick","array","toString","split","csvToJsonResult","console","log","headers","i","jsonObject","currentArrayString","string","quoteFlag","forEach","character","jsonProperties","j","includes","map","trim","push","length","JSON","stringify"],"mappings":"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","file":"static/js/14.5eceb002.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// ==============================|| AVATAR ||============================== //\n\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\n    const theme = useTheme();\n\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\n    const outlineSX = outline && {\n        color: color ? `${color}.main` : `primary.main`,\n        bgcolor: theme.palette.background.paper,\n        border: '2px solid',\n        borderColor: color ? `${color}.main` : `primary.main`\n    };\n    let sizeSX = {};\n    switch (size) {\n        case 'badge':\n            sizeSX = {\n                width: theme.spacing(3.5),\n                height: theme.spacing(3.5)\n            };\n            break;\n        case 'xs':\n            sizeSX = {\n                width: theme.spacing(4.25),\n                height: theme.spacing(4.25)\n            };\n            break;\n        case 'sm':\n            sizeSX = {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            };\n            break;\n        case 'lg':\n            sizeSX = {\n                width: theme.spacing(9),\n                height: theme.spacing(9)\n            };\n            break;\n        case 'xl':\n            sizeSX = {\n                width: theme.spacing(10.25),\n                height: theme.spacing(10.25)\n            };\n            break;\n        case 'md':\n            sizeSX = {\n                width: theme.spacing(7.5),\n                height: theme.spacing(7.5)\n            };\n            break;\n        default:\n            sizeSX = {};\n    }\n\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\n};\n\nAvatar.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.string,\n    outline: PropTypes.bool,\n    size: PropTypes.string,\n    sx: PropTypes.object\n};\n\nexport default Avatar;\n","import PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\n\n// project imports\nimport Avatar from '../extended/Avatar';\n\n// ==============================|| CARD SECONDARY ACTION ||============================== //\n\nconst CardSecondaryAction = ({ title, link, icon }) => {\n    const theme = useTheme();\n\n    return (\n        <Tooltip title={title || 'Reference'} placement=\"left\">\n            <ButtonBase disableRipple>\n                {!icon && (\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <g clipPath=\"url(#clip0)\">\n                                <path\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\n                                    fill={theme.palette.primary[800]}\n                                />\n                                <path\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\n                                <path\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0\">\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                    </Avatar>\n                )}\n                {icon && (\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\n                        {icon}\n                    </Avatar>\n                )}\n            </ButtonBase>\n        </Tooltip>\n    );\n};\n\nCardSecondaryAction.propTypes = {\n    icon: PropTypes.node,\n    link: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default CardSecondaryAction;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, Button } from '@mui/material';\n\n// project imports\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\n\n// thirdparty imports\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'; // ES6\n// project imports\n// import chartData from './chart-data/bajaj-area-chart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst Converter = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n    const [state, setState] = useState({\n        csv: '',\n        json: ''\n    });\n    const orangeDark = theme.palette.secondary[800];\n\n    useEffect(() => {}, []);\n\n    const handleCSVChange = (data) => {\n        setState((prev) => ({ ...prev, csv: data }));\n    };\n    const handleJSONChange = (data) => {\n        setState((prev) => ({ ...prev, json: data }));\n    };\n    const handleConvert = () => {\n        const csvData = state.csv;\n        const array = csvData.toString().split('\\n');\n\n        /* Store the converted result into an array */\n        const csvToJsonResult = [];\n\n        /* Store the CSV column headers into seprate variable */\n        console.log('header start');\n        const headers = array[0].split(', ');\n        console.log(headers);\n        console.log('header end');\n        /* Iterate over the remaning data rows */\n        for (let i = 1; i < array.length - 1; i += 1) {\n            /* Empty object to store result in key value pair */\n            const jsonObject = {};\n            /* Store the current array element */\n            const currentArrayString = array[i];\n            let string = '';\n\n            let quoteFlag = 0;\n            // for (let character of currentArrayString) {\n            //     if (character === '\"' && quoteFlag === 0) {\n            //         quoteFlag = 1;\n            //     } else if (character === '\"' && quoteFlag === 1) quoteFlag = 0;\n            //     if (character === ', ' && quoteFlag === 0) character = '|';\n            //     if (character !== '\"') string += character;\n            // }\n            console.log('array string start');\n            console.log(currentArrayString);\n            currentArrayString.forEach((character) => {\n                if (character === '\"' && quoteFlag === 0) {\n                    quoteFlag = 1;\n                } else if (character === '\"' && quoteFlag === 1) quoteFlag = 0;\n                if (character === ', ' && quoteFlag === 0) character = '|';\n                if (character !== '\"') string += character;\n            });\n            console.log('array string end');\n            const jsonProperties = string.split('|');\n\n            // for (const j in headers) {\n            //     if (jsonProperties[j].includes(', ')) {\n            //         jsonObject[headers[j]] = jsonProperties[j].split(', ').map((item) => item.trim());\n            //     } else jsonObject[headers[j]] = jsonProperties[j];\n            // }\n            headers.forEach((j) => {\n                if (jsonProperties[j].includes(', ')) {\n                    jsonObject[headers[j]] = jsonProperties[j].split(', ').map((item) => item.trim());\n                } else jsonObject[headers[j]] = jsonProperties[j];\n            });\n            /* Push the genearted JSON object to resultant array */\n            csvToJsonResult.push(jsonObject);\n        }\n        /* Convert the final array to JSON */\n        const json = JSON.stringify(csvToJsonResult);\n        console.log(json);\n    };\n    return (\n        <MainCard title=\"Basic Typography\" secondary={<SecondaryAction link=\"https://next.material-ui.com/system/typography/\" />}>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12} sm={6}>\n                    <SubCard title=\"CSV\">\n                        <Grid container direction=\"column\" spacing={1}>\n                            <Grid item>\n                                {/* <ReactQuill\n                                    value={state.csv}\n                                    onChange={handleCSVChange}\n                                    modules={{\n                                        toolbar: false\n                                    }}\n                                /> */}\n                                <textarea value={state.csv} onChange={(e) => handleCSVChange(e.target.value)}>\n                                    please enter something\n                                </textarea>\n                            </Grid>\n                        </Grid>\n                    </SubCard>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubCard title=\"JSON\">\n                        <Grid container direction=\"column\" spacing={1}>\n                            <Grid item>\n                                <ReactQuill\n                                    value={state.json}\n                                    onChange={handleJSONChange}\n                                    modules={{\n                                        toolbar: false\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </SubCard>\n                </Grid>\n            </Grid>\n            <Grid\n                item\n                xs={12}\n                sx={{\n                    mt: 4\n                }}\n            >\n                <Button disableElevation variant=\"contained\" size=\"small\" sx={{ color: 'inherit' }} onClick={handleConvert}>\n                    Convert\n                </Button>\n            </Grid>\n        </MainCard>\n    );\n};\n\nexport default Converter;\n"],"sourceRoot":""}